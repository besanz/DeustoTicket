Backend
  build.xml
  jdoconfig.xml
  README.md
  src
    data
      dao
        clases
          ArtistaDAO.java ArtistaDAO
          ClienteDAO.java ClienteDAO
          EspacioDAO.java EspacioDAO
          EventoDAO.java EventoDAO
          PrecioDAO.java PrecioDAO
          TicketDAO.java TicketDAO
        IDao.java IDao
      entidades
        Artista.java Artista (id-int, nombre-String, descripcion-String, fechaNacimiento-Date, foto-String)
        Cliente.java Cliente (id-int, nombre-String)
        Espacio.java Espacio (id-int, nombre-String, direccion-String)
        Evento.java Evento (id-int, titulo-String, descripcion-String, fecha-Date, portada-String, aforo-int)
        Precio.java Precio (id-int, nombre-String, precio-double, disponibles-int, ofertadas-int)
        Staff.java Staff (id-int, username-String, password-String)
        Ticket.java Ticket (id-int, evento-Evento, precio-Precio, cliente-Cliente)
        User.java User (dni-String, nombre-String, apellidos-String, email-String, ticket-Ticket)
    rest
      TicketProviderClient.java TicketProviderClient [main(args-String)]
    rmi
      server
        api
          IStaffService.java 
          IUserService.java 
        exceptions
          InvalidUser.java InvalidUser (message-String) [getErrorMessage()]
        impl
          ServerStaff.java ServerStaff [loginStaff(username-String, password-String); registrarCliente(nombre-String); obtenerClientes(); actualizarCliente(id-int, nombre-String); eliminarCliente(id-int); main(args-String)]
          ServerUser.java ServerUser [sayHello(); sayMessage(login-String, password-String, message-String); registrarUsuario(login-String, password-String); validarUsuario(login-String, password-String); registrarCliente(login-String, password-String); crearCliente(nombre-String); obtenerClientes(); actualizarCliente(id-int, nombre-String); eliminarCliente(id-int); obtenerArtistas(); obtenerEventos(); obtenerEventoPorID(id-int); obtenerEventosDestacados(); comprarTicket(idPrecio-int, idCliente-int); main(args-String)]
  util
    readMe_Mac_Users.txt
    registry.bat
FrontendStaff
  build.xml
  README.md
  src
    controller
      StaffController.java StaffController
    data
      entidades
        Artista.java Artista (id-int, nombre-String, descripcion-String, fechaNacimiento-Date, foto-String)
        Cliente.java Cliente (id-int, nombre-String)
        Espacio.java Espacio (id-int, nombre-String, direccion-String)
        Evento.java Evento (id-int, titulo-String, descripcion-String, fecha-Date, portada-String, aforo-int)
        Precio.java Precio (id-int, nombre-String, precio-double, disponibles-int, ofertadas-int)
        Staff.java Staff (id-int, nombre-String)
        Ticket.java Ticket (id-int, evento-Evento, precio-Precio, cliente-Cliente)
        User.java User (dni-String, nombre-String, apellidos-String, email-String, ticket-Ticket)
    gui
      LoginStaff.java LoginStaff
      MainWindow.java MainWindow
    rmi
      client
        Client.java Client [main(args-String)]
      server
        api
          IStaffService.java 
        exceptions
          InvalidUser.java InvalidUser (message-String) [getErrorMessage()]
FrontendUser
  build.xml
  README.md
  src
    controller
      UserController.java UserController
    data
      entidades
        Artista.java Artista (id-int, nombre-String, descripcion-String, fechaNacimiento-Date, foto-String)
        Cliente.java Cliente (id-int, nombre-String)
        Espacio.java Espacio (id-int, nombre-String, direccion-String)
        Evento.java Evento (id-int, titulo-String, descripcion-String, fecha-Date, portada-String, aforo-int)
        Precio.java Precio (id-int, nombre-String, precio-double, disponibles-int, ofertadas-int)
        Ticket.java Ticket (id-int, evento-Evento, precio-Precio, cliente-Cliente)
        User.java User (dni-String, nombre-String, apellidos-String, email-String, ticket-Ticket)
    gui
      LoginUser.java LoginStaff
      MainWindow.java MainWindow
    rmi
      client
        Client.java Client [main(args-String)]
      server
        api
          IUserService.java 
        exceptions
          InvalidUser.java InvalidUser (message-String) [getErrorMessage()]
tree.py